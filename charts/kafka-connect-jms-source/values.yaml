# Basic info
replicaCount: 1

image:
  repository: registry.hub.docker.com/datamountaineer/kafka-connect-jms
  tag: 1.0.1
  pullPolicy: IfNotPresent

# Resource management
resources:
  limits:
    memory: 512Mi
  requests:
    memory: 256Mi

# javaHeap options    
javaHeap: 256M

# Monitoring
monitoring:
  pipeline: "__REQUIRED__"
  enabled: true
  port: 9102
  path: "/metrics"

# lenses 
lensesUser: ""

# kafka ssl
# The key and truststores base64 encoded contents
# and added to the kafka secret and mounted into /etc/landoop/kafka-security
kafka:
  securityProtocol:
  ssl:
    enabled: false
    trustStoreFileData:
    trustStorePassword:
    keyStoreFileData:
    keyStorePassword:
  sasl:
    enabled: false
    # keyTabData is the base64 enecode contents kerberos keytable is using kerberos
    keyTabData:    
    # jaasFileData is the base64 encoded contents of the kafka jaas file
    jaasFileData: 
    #GSSAP, SCRAM or PLAIN
    mechanism: 

# Connect values

# clusterName The connect cluster name. This is the consumer group id for the backing topics
clusterName: "__REQUIRED__"

# bootstrapServers A comma separated list of the kafka brokers
bootstrapServers: kafka:9092

# schemaRegistryURL A comman separated list of the Schema registry URL
schemaRegistryURL: "http://schema-registry:8081"

# restPort The rest port of Connect
restPort: 8083

# logLevel The log4j level
logLevel: INFO

# keyConverter The key converter to/from Connects struct
keyConverter: "io.confluent.connect.avro.AvroConverter"

# valueConverter The key converter to/from Connects struct
valueConveter: "io.confluent.connect.avro.AvroConverter"

# connectorClass
connectorClass: "com.datamountaineer.streamreactor.connect.jms.source.JMSSourceConnector"

# applicationId name of the connector
applicationId: "__REQUIRED__"

# maxTasks The number of tasks to spawn
tasksMax: "__REQUIRED__"

# batchSize The number of records to poll for on the target JMS destination in each Connect poll. type: INT importance: MEDIUM
batchSize: 100

# kcql connect.jms.kcql type: STRING importance: HIGH
kcql: "__REQUIRED__"

# username Provides the user for the JMS connection type: STRING importance: HIGH
username: 

# password stored in the secret. Provides the password for the JMS connection type: PASSWORD importance: HIGH
password: "__REQUIRED__"

# url Provides the JMS broker url type: STRING importance: HIGH
url: "__REQUIRED__"

# connectionFactory Provides the full class name for the ConnectionFactory implementation to use, e.gorg.apache.activemq.ActiveMQConnectionFactory type: STRING importance: HIGH
connectionFactory: ConnectionFactory

# subscriptionName subscription name to use when subscribing to a topic, specifying this makes a durable subscription for topics type: STRING importance: HIGH
subscriptionName: 

# initialContextExtraParams List (comma separated) of extra properties as key/value pairs with a colon delimiter to supply to the initial context e.g. SOLACE_JMS_VPN:my_solace_vp type: LIST importance: MEDIUM
initialContextExtraParams: 

# initialContextFactory Initial Context Factory, e.g: org.apache.activemq.jndi.ActiveMQInitialContextFactory type: STRING importance: HIGH
initialContextFactory: "__REQUIRED__"

# destinationSelector Selector to use for destination lookup. Either CDI or JNDI. type: STRING importance: MEDIUM
destinationSelector: CDI

# sourceDefaultConverter 
# Contains a canonical class name for the default converter of a raw JMS message bytes to a SourceRecord.
# Overrides to the default can be done by using connect.jms.source.converters still.
# i.e. com.datamountaineer.streamreactor.connect.source.converters.AvroConverter type: STRING importance: HIGH
sourceDefaultConverter: 

# converter.avro.schema If the AvroConverter is used you need to provide an avro Schema to be able to read and translate the raw bytes to an avro record. 
# The format is $JMS_TOPIC=$AVRO_SCHEMA_FILE_NAME type: STRING importance: HIGH
# The schemas will be mounted in /etc/landoop/schemas. The file name must match the keys in avroSchemaFiles

#converterAvroSchemas:

#avroSchemaFiles:
  # schemaFileName1: |- 
  #   "{
  #     \"type\": \"record\",
  #     \"name\": \"LongList\",
  #     \"aliases\": [\"LinkedLongs\"],                      // old name for this
  #     \"fields\" : [
  #       {\"name\": \"value\", \"type\": \"long\"},             // each element has a long
  #       {\"name\": \"next\", \"type\": [\"null\", \"LongList\"]} // optional next element
  #     ]
  #   }"

# converterThrowOnError If set to false the conversion exception will be swallowed and everything carries on BUT the message is lost!!; true will throw the exception.Default is false. type: BOOLEAN importance: HIGH
converterThrowOnError: false

# enabled Enables the output for how many records have been processed type: BOOLEAN importance: MEDIUM
progressEnabled: true



