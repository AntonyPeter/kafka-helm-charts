# Basic info
replicaCount: 1

# image
image:
  repository: registry.hub.docker.com/datamountaineer/kafka-connect-coap
  tag: 1.0.1
  pullPolicy: IfNotPresent

# Resource management
resources:
  limits:
    memory: 512Mi
  requests:
    memory: 256Mi

# Monitoring
monitoring:
  pipeline: "__REQUIRED__"
  enabled: true
  port: 9102
  path: "/metrics"

# lenses 
lensesUser: ""

# javaHeap options    
javaHeap: 256M

# clusterName The connect cluster name. This is the consumer group id for the backing topics
clusterName: "__REQUIRED__"

# bootstrapServers A comma separated list of the kafka brokers
bootstrapServers: kafka:9092

# schemaRegistryURL A comman separated list of the Schema registry URL
schemaRegistryURL: "http://schema-registry:8081"

# restPort The rest port of Connect
restPort: 8083

# logLevel The log4j level
logLevel: INFO

# keyConverter The key converter to/from Connects struct
keyConverter: "io.confluent.connect.avro.AvroConverter"

# valueConverter The key converter to/from Connects struct
valueConveter: "io.confluent.connect.avro.AvroConverter"

# connectorClass
connectorClass: "com.datamountaineer.streamreactor.connect.coap.sink.CoapSinkConnector"

# applicationId name of the connector
applicationId: "__REQUIRED__"

# maxTasks The number of tasks to spawn
tasksMax: "__REQUIRED__"

# topics to sink
topics: "__REQUIRED__"

# kcql The KCQL statement to select and route resources to topics. type: STRING importance: HIGH
kcql: "__REQUIRED__"

# enabled Enables the output for how many records have been processed type: BOOLEAN importance: MEDIUM
progressEnabled: true

# maxRetries The maximum number of times to try the write again. type: INT importance: MEDIUM
maxRetries: 20

# retryInterval The time in milliseconds between retries. type: INT importance: MEDIUM
retryInterval: 60000

# errorPolicy 
# Specifies the action to be taken if an error occurs while inserting the data.
#  There are three available options:
#     NOOP - the error is swallowed
#     THROW - the error is allowed to propagate.
#     RETRY - The exception causes the Connect framework to retry the message. The number of retries is set by connect.cassandra.max.retries.
# All errors will be logged automatically, even if the code swallows them.
#      type: STRING importance: HIGH
errorPolicy: THROW

# port The port the DTLS connector will bind to on the Connector host. type: INT importance: LOW
port: 0

# uri The COAP server to connect to. type: STRING importance: HIGH
uri: localhost

# username CoAP PSK identity. type: STRING importance: LOW
username: 

# password CoAP PSK secret key in the secret
password: "__REQUIRED__"

# host The hostname the DTLS connector will bind to on the Connector host. type: STRING importance: LOW
host: localhost

# publicKeyFileData is the base64 encoded publicKey data
# This put in a config map and mounted as /etc/landoop/certs/public-key.pem 
privateKeyFileData:

#  Path to the private key file data base64 encoded for use in with PSK credentials in PKCS8 rather than PKCS1
#  Use open SSL to convert.
# 
#  `openssl pkcs8 -in privatekey.pem -topk8 -nocrypt -out privatekey-pkcs8.pem`
# 
#  Only cipher suites TLS_PSK_WITH_AES_128_CCM_8 and TLS_PSK_WITH_AES_128_CBC_SHA256 are currently supported.
#      type: STRING importance: LOW
# privateKeyFileData is the based64 encoded private key data. 
# This put in a config map and mounted as /etc/landoop/certs/private-key.pem 
privateKeyFileData: 

# For SSL, key and truststore binary files are need. You can either use persistent volumes
# or distribute to files to each host and set the path in ssl.path
# They will be mounted into /etc/landoop/ssl. 
# The files MUST be named truststore.jks and keystore.jks
ssl:
  enabled: false
  # Path to the directory on the kubernetes hosts
  path: "/ssl"

# truststorePass The password  key of the trust store in the secret
truststorePass:

# keystorePass The password key of the key store in the secret
keystorePass:

# certChainKey The key to use to get the certificate chain. type: STRING importance: LOW
certChainKey: client

# certs The password of the trust store. type: LIST importance: LOW
certs: 
