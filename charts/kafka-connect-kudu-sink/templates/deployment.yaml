apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        hostPort: {{ .Values.restPort | quote }}
        containerPort: {{ .Values.restPort | quote }}
        pipeline: {{ .Values.monitoring.pipeline | quote }}
        lenses: lenses-connector
        lenses-user: {{ .Values.lensesUser}}
      annotations:
        prometheus.io/scrape: {{ .Values.monitoring.enabled | quote }}
        prometheus.io/port: {{ .Values.monitoring.port | quote }}
        prometheus.io/path: {{ .Values.monitoring.path | quote }}
    spec:
      {{- if or .Values.kafka.ssl.enabled .Values.kafka.sasl.enabled }} 
      volumes:                
        - name: kafka-secrets
          secret:
            secretName: {{ template "fullname" . }}-kafka-secrets
            defaultMode: 256
            items:
              {{- if .Values.kafka.ssl.enabled }}
              - key: client.keystore.jks
                path: client.keystore.jks
              - key: client.truststore.jks 
                path: client.truststore.jks
              {{- end -}}  
              {{- if .Values.kafka.sasl.enabled }}
              - key: jaas.conf
                path: jass.conf
              {{- end -}}
      {{- end -}}            
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.restPort }}
        livenessProbe:
          exec:
            command:
            - /etc/landoop/bin/liveliness.sh
          initialDelaySeconds: 30
          timeoutSeconds: 5
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- if or .Values.kafka.ssl.enabled .Values.kafka.sasl.enabled }} 
        volumeMounts: 
          - name: kafka-secrets
            mountPath: "/etc/landoop/kafka-secrets"
        {{- end }} 
        env:
        # JVM Heap Allowance
        - name: KAFKA_HEAP_OPTS
          value: -Xmx{{ .Values.javaHeap }}
        - name: CONNECT_LOG4J_ROOT_LOGLEVEL
          value: {{ .Values.logLevel | quote }}
        - name: CONNECT_GROUP_ID
          value: {{ .Values.clusterName | quote }}
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: {{ .Values.bootstrapServers | quote }}
        - name: CONNECT_REST_PORT
          value: {{ .Values.restPort | quote }}
        - name: CONNECT_CONFIG_STORAGE_TOPIC
          value: "{connect-{{ .Values.clusterName }}-configs"
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: "connect-{{ .Values.clusterName }}-offsets"
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: "{connect-{{ .Values.clusterName }}-statuses"
        - name: CONNECT_KEY_CONVERTER
          value: "{{ .Values.keyConverter }}"
        - name: CONNECT_VALUE_CONVERTER
          value: "{{ .Values.valueConverter }}"
        - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
          value: {{ .Values.schemaRegistryURL | quote }}
        - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
          value: {{ .Values.schemaRegistryURL | quote }}
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name:  CONNECT_PLUGIN_PATH
          value: "/etc/landoop/jars"

        # add connect worker and connector ssl properties   
        {{- if .Values.kafka.ssl.enabled }}
        - name: CONNECT_SECURITY_PROTOCOL
          value: {{ .Values.kafka.secruityProtocol}}
        - name: CONNECT_SSL_TRUSTSTORE_LOCATION
          value: "/etc/landoop/kafka-secrets/client.truststore.jks"
        - name: CONNECT_SSL_KEYSTORE_LOCATION
          value: "/etc/landoop/kafka-secrets/client.keystore.jks"
        - name: CONNECT_SSL_TRUSTSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-kafka-secrets
              key:  "client.truststore.password"                  
        - name: CONNECT_SSL_KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-kafka-secrets
              key:  "client.keystore.password"

        - name: CONNECTOR_CONSUMER_SECURITY_PROTOCOL
          value: {{ .Values.kafka.secruityProtocol}}
        - name: CONNECTOR_CONSUMER_SSL_TRUSTSTORE_LOCATION
          value: "/etc/landoop/kafka-secrets/client.truststore.jks"
        - name: CONNECTOR_CONSUMER_SSL_KEYSTORE_LOCATION
          value: "/etc/landoop/kafka-secrets/client.keystore.jks"
        - name: CONNECTOR_CONSUMER_SSL_TRUSTSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-kafka-secrets
              key:  "client.truststore.password"                  
        - name: CONNECTOR_CONSUMER_SSL_KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-kafka-secrets
              key:  "client.key.store.password"

        - name: CONNECTOR_PRODUCER_SECURITY_PROTOCOL
          value: {{ .Values.kafka.secruityProtocol}}
        - name: CONNECTOR_PRODUCER_SSL_TRUSTSTORE_LOCATION
          value: "/etc/landoop/kafka-secrets/client.truststore.jks"
        - name: CONNECTOR_PRODUCER_SSL_KEYSTORE_LOCATION
          value: "/etc/landoop/kafka-secrets/client.keystore.jks"
        - name: CONNECTOR_PRODUCER_SSL_TRUSTSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-kafka-secrets
              key:  "client.truststore.password"                  
        - name: CONNECTOR_PRODUCER_SSL_KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-kafka-secrets
              key:  "client.keystore.password"                                         
        {{- end -}}  

        # Connector properties
        - name: CONNECTOR_NAME
          value: {{ .Values.applicationId | quote }}
        - name: CONNECTOR_GROUP_ID
          value: {{ .Values.applicationId | quote }}
        - name: CONNECTOR_CONNECTOR_CLASS
          value: {{ .Values.connectorClass | quote }}
        - name: CONNECTOR_TASKS_MAX
          value: {{ .Values.tasksMax | quote }}
        - name: CONNECTOR_CONNECT_KUDU_KCQL
          value: {{ .Values.kcql | quote }}
        - name: CONNECTOR_CONNECT_KUDU_MASTER
          value: {{ .Values.master | quote }}
        - name: CONNECTOR_CONNECT_KUDU_SCHEMA_REGISTRY_URL
          value: {{ .Values.schemaRegistryUrl | quote }}
        - name: CONNECTOR_CONNECT_KUDU_WRITE_FLUSH_MODE
          value: {{ .Values.writeFlushMode | quote }}          
        - name: CONNECTOR_CONNECT_KUDU_MUTATION_BUFFER_SPACE
          value: {{ .Values.mutationBufferSpace | quote }}          
        - name: CONNECTOR_CONNECT_KUDU_MAX_RETRIES
          value: {{ .Values.maxRetries | quote }}
        - name: CONNECTOR_CONNECT_KUDU_RETRY_INTERVAL
          value: {{ .Values.retryInterval | quote }}  
        - name: CONNECTOR_CONNECT_KUDU_ERROR_POLICY
          value: {{ .Values.errorPolicy | quote }}          
        - name: CONNECTOR_CONNECT_PROGRESS_ENABLED
          value: {{ .Values.progressEnabled | quote }}