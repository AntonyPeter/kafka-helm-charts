# Basic info
replicaCount: 1

# image connector image
image:
  repository: registry.hub.docker.com/datamountaineer/kafka-connect-blockchain
  tag: 0.4.1
  pullPolicy: IfNotPresent

# Resource management
resources:
  limits:
    memory: 512Mi
  requests:
    memory: 256Mi

#javaHeap option
javaHeap: "256M"

# Monitoring
monitoring:
  pipeline: "__REQUIRED__"
  enabled: true
  port: 9102
  path: "/metrics"

# lenses 
lensesUser: ""

# Connect values

# javaHeap options    
javaHeap: 256M

# clusterName The connect cluster name. This is the consumer group id for the backing topics
clusterName: "__REQUIRED__"

# bootstrapServers A comma separated list of the kafka brokers
bootstrapServers: kafka:9092

# schemaRegistryURL A comman separated list of the Schema registry URL
schemaRegistryURL: "http://schema-registry:8081"

# restPort The rest port of Connect
restPort: 8083

# logLevel The log4j level
logLevel: INFO

# keyConverter The key converter to/from Connects struct
keyConverter: "io.confluent.connect.avro.AvroConverter"

# valueConverter The key converter to/from Connects struct
valueConveter: "io.confluent.connect.avro.AvroConverter"

# connectorClass the connector class to use
connectorClass: "com.datamountaineer.streamreactor.connect.blockchain.source.BlockchainSourceConnector"

# applicationId name of the connector
applicationId: "__REQUIRED__"

# maxTasks The number of tasks to spawn
maxTasks: 1

# sourceKafkaTopic Specifies the kafka topic to sent the records to. type: STRING importance: HIGH
sourceKafkaTopic: "__REQUIRED__"

# enabled Enables the output for how many records have been processed type: BOOLEAN importance: MEDIUM
progressEnabled: true

# sourceUrl The websocket connection. type: STRING importance: HIGH
sourceUrl: wss://ws.blockchain.info/inv

# sourceSubscriptionAddresses Comma separated list of addresses to receive transactions updates for type: STRING importance: LOW
sourceSubscriptionAddresses: 

