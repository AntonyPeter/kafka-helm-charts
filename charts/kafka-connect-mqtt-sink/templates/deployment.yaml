apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        hostPort: {{ .Values.restPort | quote }}
        containerPort: {{ .Values.restPort | quote }}
        pipeline: {{ .Values.monitoring.pipeline | quote }}
        lenses: lenses-connector
        lenses-user: {{ .Values.lensesUser}}
      annotations:
        prometheus.io/scrape: {{ .Values.monitoring.enabled | quote }}
        prometheus.io/port: {{ .Values.monitoring.port | quote }}
        prometheus.io/path: {{ .Values.monitoring.path | quote }}
        configTopic: "{connect-{{ .Values.clusterName }}-configs"
        statusTopic: "{connect-{{ .Values.clusterName }}-statuses"
        offsetTopic: "{connect-{{ .Values.clusterName }}-offsets"
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.restPort }}
        livenessProbe:
          exec:
            command:
            - /etc/landoop/bin/liveliness.sh
          initialDelaySeconds: 30
          timeoutSeconds: 5 
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        # JVM Heap Allowance
        - name: KAFKA_HEAP_OPTS
          value: -Xmx{{ .Values.javaHeap }}
        - name: CONNECT_LOG4J_ROOT_LOGLEVEL
          value: {{ .Values.logLevel | quote }}
        - name: CONNECT_GROUP_ID
          value: {{ .Values.clusterName | quote }}
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: {{ .Values.bootstrapServers | quote }}
        - name: CONNECT_REST_PORT
          value: {{ .Values.restPort | quote }}
        - name: CONNECT_CONFIG_STORAGE_TOPIC
          value: "{connect-{{ .Values.clusterName }}-configs"
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: "connect-{{ .Values.clusterName }}-offsets"
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: "{connect-{{ .Values.clusterName }}-statuses"
        - name: CONNECT_KEY_CONVERTER
          value: "{{ .Values.keyConverter }}"
        - name: CONNECT_VALUE_CONVERTER
          value: "{{ .Values.valueConverter }}"
        - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
          value: {{ .Values.schemaRegistryURL | quote }}
        - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
          value: {{ .Values.schemaRegistryURL | quote }}
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name:  CONNECT_PLUGIN_PATH
          value: "/etc/landoop/jars"

        # Connector properties
        - name: CONNECTOR_NAME
          value: {{ .Values.applicationId | quote }}
        - name: CONNECTOR_GROUP_ID
          value: {{ .Values.applicationId | quote }}
        - name: CONNECTOR_CONNECTOR_CLASS
          value: {{ .Values.connectorClass | quote }}
        - name: CONNECTOR_TASKS_MAX
          value: {{ .Values.tasksMax | quote }}
        - name: CONNECTOR_CONNECT_MQTT_KCQL
          value: {{ .Values.kcql | quote }}
        - name: CONNECTOR_CONNECT_MQTT_USERNAME
          value: {{ .Values.username | quote }}
        - name: CONNECTOR_CONNECT_MQTT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key:  "password"
        - name: CONNECTOR_CONNECT_MQTT_HOSTS
          value: {{ .Values.hosts | quote }} 
        - name: CONNECTOR_CONNECT_MQTT_CLIENT_ID
          value: {{ .Values.clientId | quote }}
        - name: CONNECTOR_CONNECT_MQTT_CLEAN
          value: {{ .Values.clean | quote }}
        - name: CONNECTOR_CONNECT_MQTT_TIMEOUT
          value: {{ .Values.timeout | quote }}
        - name: CONNECTOR_CONNECT_MQTT_POLLING_TIMEOUT
          value: {{ .Values.pollingTimeout | quote }}
        - name: CONNECTOR_CONNECT_MQTT_SERVICE_QUALITY
          value: {{ .Values.serviceQuality | quote }}
        - name: CONNECTOR_CONNECT_MQTT_KEEP_ALIVE
          value: {{ .Values.keepAlive | quote }}
        - name: CONNECTOR_CONNECT_MQTT_RETRY_INTERVAL
          value: {{ .Values.retryInterval | quote }}  
        - name: CONNECTOR_CONNECT_MQTT_MAX_RETRIES
          value: {{ .Values.maxRetries | quote }}
        - name: CONNECTOR_CONNECT_MQTT_ERROR_POLICY
          value: {{ .Values.errorPolicy | quote }}
        - name: CONNECTOR_CONNECT_PROGRESS_ENABLED
          value: {{ .Values.progressEnabled | quote }}
        - name: CONNECTOR_CONNECT_CONVERTER_AVRO_SCHEMAS
          value: {{ .Values.avroSchemas | quote }}
        - name: CONNECTOR_CONNECT_MQTT_CONVERTER_THROW_ON_ERROR
          value: {{ .Values.converterThrowOnError | quote }}

        {{- if .Values.sslEnabled }}
        - name: CONNECTOR_CONNECT_MQTT_SSL_CA_CERT
          value: "/etc/landoop/secrets/ca.crt"
        - name: CONNECTOR_CONNECT_MQTT_SSL_CERT
          value: "/etc/landoop/secrets/server.crt"
        - name: CONNECTOR_CONNECT_MQTT_SSL_KEY
          value: "/etc/landoop/secrets/server.key"

        volumeMounts:
          - mountPath: "/etc/landoop/schemas"
            name: schemas
          - name: secrets
            mountPath: "/etc/landoop/secrets"
            readOnly: true  
      volumes:
        - name: schemas
          configMap:
            name: "{{ template "fullname" . }}-schemas"
        - name: secrets
          secret:
            secretName: {{ template "fullname" . }}
            defaultMode: 256
            items:
              - key: sslCert
                path: server.crt
              - key: sslCaCert 
                path: ca.crt
              - key: sslKey
                path: server.key
        {{- end -}}
