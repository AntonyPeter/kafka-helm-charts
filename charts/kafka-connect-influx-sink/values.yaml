# Basic info
replicaCount: 1

image:
  repository: registry.hub.docker.com/datamountaineer/kafka-connect-influx
  tag: 1.0.1
  pullPolicy: IfNotPresent

# Resource management
resources:
  limits:
    memory: 512Mi
  requests:
    memory: 256Mi

# javaHeap options    
javaHeap: 256M

# Monitoring
monitoring:
  pipeline: "__REQUIRED__"
  enabled: true
  port: 9102
  path: "/metrics"

# lenses 
lensesUser: ""

# kafka ssl
# The key and truststores base64 encoded contents
# and added to the kafka secret and mounted into /etc/landoop/kafka-security
kafka:
  securityProtocol:
  ssl:
    enabled: false
    trustStoreFileData:
    trustStorePassword:
    keyStoreFileData:
    keyStorePassword:
  sasl:
    enabled: false
    # jaasFileData is the base64 encoded contents of the kafka jaas file
    jaasFileData: 
    #GSSAP, SCRAM or PLAIN
    mechanism: 
# Connect values
# clusterName The connect cluster name. This is the consumer group id for the backing topics
clusterName: "__REQUIRED__"

# bootstrapServers A comma separated list of the kafka brokers
bootstrapServers: kafka:9092

# schemaRegistryURL A comman separated list of the Schema registry URL
schemaRegistryURL: "http://schema-registry:8081"

# restPort The rest port of Connect
restPort: 8083

# logLevel The log4j level
logLevel: INFO

# keyConverter The key converter to/from Connects struct
keyConverter: "io.confluent.connect.avro.AvroConverter"

# valueConverter The key converter to/from Connects struct
valueConveter: "io.confluent.connect.avro.AvroConverter"

# connectorClass
connectorClass: "com.datamountaineer.streamreactor.connect.influx.InfluxSinkConnector"

# applicationId name of the connector
applicationId: "__REQUIRED__"

# maxTasks The number of tasks to spawn
tasksMax: "__REQUIRED__"

# topics to sink
topics: "__REQUIRED__"

# kcql KCQL expression describing field selection and target measurements. type: STRING importance: HIGH
kcql: "__REQUIRED__"

# db The database to store the values to. type: STRING importance: HIGH
db: "__REQUIRED__"

# url The InfluxDB database url. type: STRING importance: HIGH
url: "__REQUIRED__"

# username The user to connect to the influx database type: STRING importance: HIGH
username: "__REQUIRED__"

# password The password for the influxdb user stored as a secret. type: PASSWORD importance: HIGH
password: "__REQUIRED__"

# consistencyLevel Specifies the write consistency. If any write operations do not meet the configured consistency guarantees, an error will occur and the data will not be indexed. The default consistency-level is ALL. type: STRING importance: MEDIUM
consistencyLevel: ALL

# retentionPolicy 
# Determines how long InfluxDB keeps the data - the options for specifying the duration of the retention policy are listed below.
# Note that the minimum retention period is one hour.
# DURATION determines how long InfluxDB keeps the data - the options for specifying the duration of the retention policy are listed below. Note that the minimum retention period is one hour.
# m minutes
# h hours
# d days
# w weeks
# INF infinite
# 
# Default retention is `autogen` from 1.0 onwards or `default` for any previous version
#      type: STRING importance: HIGH
retentionPolicy: autogen

# maxRetries The maximum number of times to try the write again. type: INT importance: MEDIUM
maxRetries: 20

# enabled Enables the output for how many records have been processed by the connector type: BOOLEAN importance: MEDIUM
progressEnabled: true

# retryInterval The time in milliseconds between retries. type: INT importance: MEDIUM
retryInterval: 60000

# errorPolicy Specifies the action to be taken if an error occurs while inserting the data.
# There are two available options:
# NOOP - the error is swallowed
# THROW - the error is allowed to propagate.
# RETRY - The exception causes the Connect framework to retry the message. The number of retries is based on
# The error will be logged automatically type: STRING importance: HIGH
errorPolicy: THROW

