# Basic info
replicaCount: 3
secretsRef: ""
image:
  repository: registry.hub.docker.com/datamountaineer/kafka-connect-cassandra
  tag: 0.2.5
  pullPolicy: Always

# Resource management
resources:
  limits:
    memory: 512Mi
  requests:
    memory: 256Mi
javaHeap: 256M

# Service info
service:
  internalPort: 8083

# Connect values
clusterName: ""
bootstrapServers: kafka:9092
schemaRegistryURL: http://schema-registry:8081
restPort: 8083
logLevel: INFO

# Connector values
applicationId: ""
connectorClass: com.datamountaineer.streamreactor.connect.cassandra.sink.CassandraSinkConnector
tasksMax: 3
topics: ""
connectCassandraSinkKcql: ""

# Connection
connectCassandraContactPoints: ""
connectCassandraPort: ""
connectCassandraKeySpace: ""
connectCassandraUsername: ""

#SSL
connectCassandraSslEnabled: false
connectCassandraTrustStorePath: ""
connectCassandraTrustStorePasswordKey: "TrustStorePasswordKey"
connectCassandraTrustStorePassword: ""
connectCassandraTrustStoreType: "JKS"
connectCassandraSslClientCertAuth: false
connectCassandraKeyStorePath: ""
connectCassandraKeyStorePasswordKey: "KeyStorePasswordKey"
connectCassandraKeyStorePassword: ""
connectCassandraKeyStoreType: "JKS"

#Error policies
connectCassandraErrorPolicy: "THROW"
connectCassandraRetryInterval: "60000"
connectCassandraMaxRetries: 20

## Performance
#The sink inserts all the data concurrently. To fail fast in case of an error, the sink has its own thread pool.
# Set the value to zero and the threadpool will default to 4* NO_OF_CPUs. Set a value greater than 0
# and that would be the size of this threadpool
connectCassandrasinkThreadPoolSize: 0
connectProgressEnabled: true

# Monitoring
monitoring:
  pipeline: ""
  enabled: true
  port: 9102
  path: "/metrics"